@startuml PropDevelopment Smart Home Containers
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Container diagram for PropDevelopment Smart Home Platform

Person(resident, "Владелец недвижимости", "Управляет системой умного дома через мобильное приложение")

System_Boundary(prop_development, "PropDevelopment Platform") {
    Container(mobile_app, "Мобильное приложение PropDevelopment", "React Native/TypeScript", "Кроссплатформенное мобильное приложение")

    Container(smart_home_service, "Smart Home Service", "Java, Spring Boot", "Центральный сервис управления умным домом")

    Container(barrier_service, "Barrier Service", "Java, Spring Boot", "Микросервис управления шлагбаумом")
    Container(barrier_service_db, "Barrier DB", "PostgreSQL", "База данных конфигураций шлагбаума")

    Container(intercom_service, "Intercom Service", "Java, Spring Boot", "Микросервис управления домофоном")
    Container(intercom_service_db, "Intercom DB", "PostgreSQL", "База данных настроек домофона")
}

System_Ext(partner_service, "Сервис партнера", "Внешний API для IoT устройств")
System_Ext(smart_intercom, "Умный домофон", "Видеодомофон с функцией распознавания лиц и удаленного открытия")
System_Ext(smart_barrier, "Умный шлагбаум", "Автоматический шлагбаум с распознаванием номерных знаков")

Rel(resident, mobile_app, "Взаимодействие", "REST API/HTTPS")
Rel(mobile_app, smart_home_service, "Отправка команд", "JSON/HTTPS")

Rel(smart_home_service, partner_service, "Интеграция", "REST API/OAuth2.0")
Rel(smart_home_service, intercom_service, "Управление домофоном", "REST API")
Rel(smart_home_service, barrier_service, "Управление шлагбаумом", "REST API")

Rel(intercom_service, intercom_service_db, "Хранение настроек", "SQL/JDBC")
Rel(barrier_service, barrier_service_db, "Хранение конфигураций", "SQL/JDBC")

Rel(partner_service, smart_intercom, "Управление", "IoT Protocol")
Rel(partner_service, smart_barrier, "Управление", "IoT Protocol")

@enduml